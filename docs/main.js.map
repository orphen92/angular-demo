{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/main-menu/main-menu.component.ts","./src/app/components/main-menu/main-menu.component.html","./src/app/store/index.ts","./src/app/store/navigation/index.ts","./src/app/store/navigation/navigation.actions.ts","./src/app/store/navigation/navigation.models.ts","./src/app/store/navigation/navigation.reducer.ts","./src/app/store/navigation/navigation.selectors.ts","./src/environments/environment.dev.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport * as fromRoot from './store'\r\nimport * as fromNavigation from './store/navigation'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Angular-demo';\r\n  menuState$: Observable<boolean>;\r\n  constructor(\r\n    private store: Store<fromRoot.State>\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.menuState$ = this.store.pipe(select(fromNavigation.getMenuState))\r\n  }\r\n\r\n  openNav(){\r\n    this.store.dispatch(new fromNavigation.NavOpen);\r\n  }\r\n\r\n  closeNav(){\r\n    this.store.dispatch(new fromNavigation.NavClose);\r\n  }\r\n\r\n  toggleNav(){\r\n    this.store.dispatch(new fromNavigation.NavToggle);\r\n  }\r\n}\r\n","\r\n<app-header></app-header>\r\n<div class=\"app-page\" [class.app-menu-open]=\"menuState$ | async\">\r\n\r\n  <div class=\"app-wrapper\">\r\n    <aside>\r\n      <app-main-menu></app-main-menu>\r\n    </aside>\r\n    <main>\r\n      Test\r\n    </main>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\n// Store\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nconst StoreDevTools: any = !environment.production ? StoreDevtoolsModule.instrument({ maxAge: 50 }) : [];\r\nimport { reducers, effects } from './store';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MatIconModule } from '@angular/material/icon';\nimport { MainMenuComponent } from './components/main-menu/main-menu.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    MainMenuComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatIconModule,\r\n    StoreModule.forRoot(reducers, {\r\n      runtimeChecks: {\r\n        strictStateImmutability: true,\r\n        strictActionImmutability: true\r\n      }\r\n    }),\r\n    EffectsModule.forRoot(effects),\r\n    StoreDevTools\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n/**State */\r\nimport * as fromRoot from '@app/store'\r\nimport * as fromNavigation from '@app/store/navigation'\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  menuState$: Observable<boolean>;\r\n  constructor(\r\n    private store: Store<fromRoot.State>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.menuState$ = this.store.pipe(select(fromNavigation.getMenuState))\r\n  }\r\n\r\n  toggleMenu(){\r\n    this.store.dispatch(new fromNavigation.NavToggle);\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <section class=\"header__title\">\r\n      <a class=\"app-a\" routerLink=\"/\">\r\n        Angular demo\r\n      </a>\r\n  </section>\r\n  <section class=\"header__navigation\">\r\n    <button class=\"button-clear\" (click)=\"toggleMenu()\">\r\n      <mat-icon [innerText]=\"(menuState$ | async) ? 'menu_open' : 'menu'\"></mat-icon>\r\n    </button>\r\n  </section>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport * as fromRoot from '@app/store'\nimport * as fromNavigation from '@app/store/navigation'\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit {\n  menuState$: Observable<boolean>;\n  constructor(\n    private store: Store<fromRoot.State>\n  ) { }\n\n  ngOnInit(): void {\n    this.menuState$ = this.store.pipe(select(fromNavigation.getMenuState))\n  }\n\n}\n","<nav class=\"app-main-nav\" [class.app-main-nav-open]=\"menuState$ | async\">\n  <div>\n    Coucou les amis\n  </div>\n</nav>\n","import { ActionReducerMap } from \"@ngrx/store\";\r\nimport * as fromNavigation from \"./navigation\";\r\nexport interface State {\r\n  navigation: fromNavigation.NavigationState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State, null> = {\r\n  navigation: fromNavigation.reducer\r\n}\r\n\r\nexport const effects: Array<any> = []\r\n","export * from './navigation.actions';\r\nexport * from './navigation.reducer';\r\nexport * from './navigation.models';\r\nexport * from './navigation.selectors';\r\n","import { Action } from \"@ngrx/store\";\r\nimport { Navigation } from \"./navigation.models\";\r\n\r\nexport enum Types {\r\n  NAV_OPEN = '[Global] NAV: open',\r\n  NAV_CLOSE = '[Global] NAV: close',\r\n  NAV_TOGGLE = '[Global] NAV: toggle',\r\n  LAST_URL = '[Global] NAV: Last url'\r\n}\r\n\r\nexport class NavOpen implements Action {\r\n  readonly type = Types.NAV_OPEN;\r\n  constructor() {}\r\n}\r\n\r\nexport class NavClose implements Action {\r\n  readonly type = Types.NAV_CLOSE;\r\n  constructor() {}\r\n}\r\n\r\nexport class NavToggle implements Action {\r\n  readonly type = Types.NAV_TOGGLE;\r\n  constructor() {}\r\n}\r\n\r\nexport class LastUrl implements Action {\r\n  readonly type = Types.LAST_URL;\r\n  constructor(public payload: Navigation) {}\r\n}\r\n\r\nexport type All = NavOpen |  NavClose | NavToggle | LastUrl;\r\n","export interface Navigation {\r\n  isNavOpen: boolean,\r\n  lastUrlVisited: string;\r\n}\r\n","import { Navigation } from \"./navigation.models\";\r\nimport * as fromAction from './navigation.actions';\r\n\r\nexport interface NavigationState {\r\n  entities: Navigation;\r\n}\r\n\r\nconst initialState: NavigationState = {\r\n  entities: {\r\n      isNavOpen: false,\r\n      lastUrlVisited: '/'\r\n  },\r\n}\r\n\r\nexport function reducer (\r\n  state = initialState,\r\n  action: fromAction.All\r\n) : NavigationState {\r\n\r\n  switch(action.type) {\r\n\r\n    case fromAction.Types.NAV_OPEN: {\r\n      return {...state, entities: {...state.entities, isNavOpen: true}}\r\n    }\r\n\r\n    case fromAction.Types.NAV_CLOSE: {\r\n      return {...state, entities: {...state.entities, isNavOpen: false}}\r\n    }\r\n\r\n    case fromAction.Types.NAV_TOGGLE: {\r\n      return {...state, entities: {...state.entities, isNavOpen: !state.entities.isNavOpen}}\r\n    }\r\n\r\n    case fromAction.Types.LAST_URL: {\r\n      return {...state, entities: action.payload }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { NavigationState } from \"./navigation.reducer\";\r\n\r\nexport const getNavigationState = createFeatureSelector<NavigationState>('navigation');\r\n\r\nconst getNavigation = createSelector(\r\n  getNavigationState,\r\n  (state) => {\r\n    console.log('state: ', state);\r\n    return state.entities;\r\n  }\r\n)\r\n\r\nexport const getLastUrl = createSelector(\r\n  getNavigationState,\r\n  (state) => state.entities.lastUrlVisited\r\n)\r\n\r\nexport const getMenuState = createSelector(\r\n  getNavigation,\r\n  (state) => state.isNavOpen\r\n)\r\n","export const environment = {\r\n  production: false,\r\n  name: 'dev'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["select","fromNavigation","AppComponent","constructor","store","ngOnInit","menuState$","pipe","getMenuState","openNav","dispatch","NavOpen","closeNav","NavClose","toggleNav","NavToggle","i0","selectors","decls","vars","consts","template","HeaderComponent","toggleMenu","ctx","MainMenuComponent"],"sourceRoot":"webpack:///"}